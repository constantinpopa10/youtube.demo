package coursera_algorithms.unionFind;

public class ErdosRenyi {

    public static int count(int N) {
        int edges = 0;
        UF uf = new UF(N);
        while (uf.count() > 1) {
            int i = StdRandom.uniform(N);
            int j = StdRandom.uniform(N);
            uf.union(i, j);
            edges++;
        }
        return edges;
    }

    public static void main(String[] args) {
        int N = Integer.parseInt(args[0]);     // number of vertices
        int T = Integer.parseInt(args[1]);     // number of trials
        int[] edges = new int[T];

        // repeat the experiment T times
        for (int t = 0; t < T; t++) {
            edges[t] = count(N);
        }

        // report statistics
        StdOut.println("1/2 N ln N = " + 0.5 * N * Math.log(N));
        StdOut.println("mean       = " + StdStats.mean(edges));
        StdOut.println("stddev     = " + StdStats.stddev(edges));
    }
}